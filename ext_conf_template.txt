# cat=basic//; type=user[EXT:media/Classes/Backend/ExtensionManager.php:TYPO3\CMS\Media\Backend\ExtensionManager->renderMessage];
updateMessage=0

# cat=basic//; type=user[EXT:media/Classes/Backend/ExtensionManager.php:TYPO3\CMS\Media\Backend\ExtensionManager->renderStorage]; label = Select Storage: Defines in what storage files are going to be stored. Important!! Consider starting with an empty storage for a new installation. Create a new one next to the auto-created "fileadmin" by clicking "List" > "Top Page (uid = 0)" > "File storage" and create a new file storage there, e.g "resources/".
storage=1

# cat=basic//; type=string; label= Comma list of Media pages (pid): If not set, a Media folder will be created automatically otherwise take this list as default for storing Media related data.
media_folders=

# cat=basic//; type=string; label= Comma list of Category pages (pid): Limit categories to a range of pages. If not set all categories will be taken into account.
category_folders=

# cat=basic//; type=string; label= Comma list of Categories applied upon upload (uid): Apply default categories when a file get uploaded. There is not check whether the Category exists, make sure to enter valid uid.
default_categories=

###################### Mount point ######################

# cat=mount points//; type=int; label= Mount point for "text" files: Give a mount point uid where to store "text" files. Text files are typically Txt, Html, ...
mount_point_for_file_type_1 = 0

# cat=mount points//; type=int; label= Mount point for "image" files: Give a mount point uid where to store "image" files.
mount_point_for_file_type_2 = 0

# cat=mount points//; type=int; label= Mount point for "audio" files: Give a mount point uid where to store "video" files.
mount_point_for_file_type_3 = 0

# cat=mount points//; type=int; label= Mount point for "video" files: Give a mount point uid where to store "video" files.
mount_point_for_file_type_4 = 0

# cat=mount points//; type=int; label= Mount point for "application" files: Give a mount point uid where to store "application" files. Application files are typically Pdf, Doc, ...
mount_point_for_file_type_5 = 0

###################### Image preset ######################

# cat=image preset//2; type=string; label= Maximum size of thumbnail image: Define the max width and height of a thumbnail. This setting is currently used for thumbnails in the list view.
image_thumbnail = 100x100

# cat=image preset//; type=string; label= Maximum size of mini image: Define the max width and height of a mini image.
image_mini = 120x120

# cat=image preset//; type=string; label= Maximum size of small image: Define the max width and height of a small image.
image_small = 320x320

# cat=image preset//; type=string; label= Maximum size of medium image: Define the max width and height of a medium image. This setting is currently used to define the max size in the image editor.
image_medium = 760x760

# cat=image preset//; type=string; label= Maximum size of large image: Define the max width and height of a large image.
image_large = 1200x1200

# cat=image preset//; type=string; label= Maximum size of original image: Limit by resizing the original image being uploaded. This can be useful if editor upload a big images not suitable for the web. Set to 0 for no file size restriction.
image_original = 1920x1920

###################### Security ######################

## cat=security//3; type=boolean; label= Activate User permissions: Beware this setting revert the logic of file access. Out of the box, all files are accessible by everyone (allowed by default policy). When activating this option, only authorized users are able to access a resource (deny by default policy). Admin users still have access to all files. FE permission handling is provided by third party extension. Media provides integration with EXT:naw_securedl. Refer to the documentation for more info.
permission = 0

## cat=security//; type=string; label= Comma list of allowed extension for text upload: List of extensions which are allowed to be uploaded as text.
extension_allowed_file_type_1 = txt, html

## cat=security//; type=string; label= Comma list of allowed extension for image upload: List of extensions which are allowed to be uploaded as image.
extension_allowed_file_type_2 = jpg, jpeg, bmp, png, tiff, tif, gif, eps

## cat=security//; type=string; label= Comma list of allowed extension for audio upload: List of extensions which are allowed to be uploaded as audio.
extension_allowed_file_type_3 = mp3, mp4, m4a, wma, f4a

## cat=security//; type=string; label= Comma list of allowed extension for video upload: List of extensions which are allowed to be uploaded as video.
extension_allowed_file_type_4 = mov, avi, mpeg, mpg, mp4, m4v, flv, f4v, webm, wmv, ogv, 3gp

## cat=security//; type=string; label= Comma list of allowed extension for application upload: List of extensions which are allowed to be uploaded as application.
extension_allowed_file_type_5 = doc, docx, dotx, ppt, pptx, pps, ppsx, odt, xls, xlsx, xltx, pdf, zip, rtf, xlt

###################### Variants ######################

# cat=variants//1; type=int; label= Mount point for variants: Give a mount point uid where to store Variants files, generated by an image editor as instance.
mount_point_for_variants = 0

# cat=variants//; type=string; label= List of Variants to be created upon upload (dimensions): When an image get uploaded, Variants can be automatically created, as example, for the use in the RTE. This can be useful for having standardized size of images. Leave empty if you don't want automatic Variants. Dimensions given corresponds to maximum width and height and can be comma separated, e.g 250x250, 300x300
variations = 250x250
